#!/usr/bin/env ruby

require 'optparse'
require "fontello_rails_converter"
command = ARGV[0]

if ARGV[0].nil?
  puts "Run fontello --help for help"
  exit
end

def options_based_on_rails_root(options)
  options[:asset_dir] = "#{options[:rails_root_dir]}/vendor/assets"
  options.merge!({
    stylesheet_dir: "#{options[:asset_dir]}/stylesheets",
    font_dir: "#{options[:asset_dir]}/fonts",
    zip_file: "#{options[:rails_root_dir]}/tmp/fontello.zip",
    config_file: "#{options[:asset_dir]}/fonts/config.json"
  })
end

options = { rails_root_dir: "." } # default
options = options_based_on_rails_root(options)

OptionParser.new do |opts|
  opts.banner = "Usage: fontello open|download|convert [options]\n\n"

  opts.separator "Most important options:"

  opts.on("-r", "--rails-root [PATH]", "Rails root path") do |opt|
    options[:rails_root_dir] = opt
    options = options_based_on_rails_root(options)
  end

  opts.on("-i", "--fontello-session-id [ID]", "Session ID from fontello.com (e.g. fb235ab72cad01d2b46aaa023ab4abbd)\n\n") do |opt|
    options[:fontello_session_id] = opt
  end

  opts.separator "Optional override options (defaults are set based on rails root):"

  opts.on("-c", "--config-file [PATH]", "config.json file (default: /rails_root/vendor/assets/fonts/config.json)") do |opt|
    options[:config_file] = opt
  end

  opts.on("-z", "--zip-file [PATH]", "Downloaded zip file (default: /rails_root/tmp/fontello.zip)") do |opt|
    options[:zip_file] = opt
  end

  opts.on("-a", "--asset-dir [PATH]", "Target asset directory (default: /rails_root/vendor/assets)") do |opt|
    options[:asset_dir] = opt
  end

  opts.on("-s", "--stylesheet-dir [PATH]", "Target stylesheet directory (default: /rails_root/vendor/assets/stylesheets)") do |opt|
    options[:stylesheet_dir] = opt
  end

  opts.on("-f", "--font-dir [PATH]", "Target font directory (default: /rails_root/vendor/assets/fonts)") do |opt|
    options[:font_dir] = opt
  end

  opts.separator "\nExamples:\n"\
                 "    fontello open -r /path/to/railsapp\n"\
                 "    fontello download -i fb235ab72cad01d2b46aaa023ab4abbd\n"\
                 "    fontello convert\n"
end.parse!


unless ["open", "download", "convert"].include?(command)
  puts "available commands: open, download, convert"
  exit
end

FontelloRailsConverter::Cli.new(options).send(command)
